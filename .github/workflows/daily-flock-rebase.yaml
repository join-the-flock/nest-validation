# This workflow runs once per day and recreates the Flock master branch with
# latest history from Flutter's master branch.
#
# The Flock master branch is reconstituted by taking the most recent history of
# Flutter's master branch, and then replaying all of Flock's changes on top.
# This replay is effectively a rebase, but each change is saved in a patch
# file instead of the git log.

on:
  schedule:
    - cron: '0 12 * * *' # Once per day at noon
  workflow_dispatch: # on button click

# Update these variables to fit your custom fork configuration.
env:
  # The GitHub location of your Flutter fork.
  FLOCK_REPO: "join-the-flock/flock"

  # A Personal Access Token (PAT) so that this action can create and force-push PRs.
  GITHUB_PAT: ${{ secrets.REPO_WORKFLOW_PAT }}

name: daily-flock-rebase
permissions:
  contents: write

jobs:
  rebase-flock-on-flutter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Nest
        uses: actions/checkout@v4
        with:
          path: 'nest'
          fetch-depth: 0 # Checkout everything to get access to the tags
          repository: ${{github.repository}}
          ref: ${{github.event.pull_request.head.ref}}
          token: ${{ env.GITHUB_PAT }}

      - name: Checkout Flock
        uses: actions/checkout@v4
        with:
          path: 'nest/flock'
          fetch-depth: 0 # Checkout everything to get access to the tags
          repository: ${{ env.FLOCK_REPO }}
          ref: ${{ env.FLUTTER_BRANCH }}
          token: ${{ env.GITHUB_PAT }}

      - name: Delete master, recreate, replay Flock
        working-directory: nest/flock
        run: |
          git config --global user.email "join-the-flock@users.noreply.github.com"
          git config --global user.name "rebase-robot"

          # Setup upstream to Flutter and fetch the latest from master.
          git remote add upstream git@github.com:flutter/flutter.git
          git fetch upstream master

          # Checkout a temporary branch so we can manipulate master.
          git checkout -b temp

          # Delete master branch and get fresh version from Flutter.
          git switch -c master upstream/master

          # Switch back to the refreshed master branch.
          git checkout master

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Apply Nest patches to Flock
        run: |
          echo "Apply patches..."
          cd nest
          python -u tools/git-import-patches.py patches

      - name: Force push master branch to Flock
        working-directory: nest/flock
        run: |
          # Store the PAT in a file that can be accessed by the
          # GitHub CLI.
          echo "$GITHUB_PAT" > token.txt

          # Authorize GitHub CLI for the current repository and
          # create a pull-requests containing the updates.
          gh auth login --with-token < token.txt

          git push -f origin master
